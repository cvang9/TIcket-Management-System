<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title> Chat App</title>
  <style>
    
      body {
        margin: 0;
        padding: 0;
        font-family: Arial, sans-serif;
        background-color: #000;
        color: #fff;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
      }
  
      .chat-container {
        width: 80%;
        max-width: 600px;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
      }
  
      .chat-log {
        max-height: 500px;
        overflow-y: auto;
        padding: 10px;
        border-radius: 10px;
        background-color: #f4f4f4;
        color: #000;
      }
  
      .chat-message {
        display: flex;
        margin-bottom: 10px;
      }
  
      .avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: #000;
        margin-right: 10px;
      }
  
      .message-content {
        flex-grow: 1;
      }
  
      .message-text {
        background-color: #000;
        color: #fff;
        padding: 10px;
        border-radius: 10px;
      }
  
      .user-message {
        align-self: flex-end;
      }
  
      .input-container {
        display: flex;
        margin-top: 20px;
      }
  
      .message-input {
        flex-grow: 1;
        padding: 10px;
        border: none;
        border-radius: 5px;
      }
  
      .send-button {
        background-color: #000;
        color: #fff;
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        cursor: pointer;
        transition: background-color 0.2s;
      }
  
      .send-button:hover {
        background-color: #333;
      }
   
      .resolver-message {
        align-self: flex-start;
        background-color: #ddd;
        color: #000;
      }
  
      .resolver-message .avatar {
        margin-right: 0;
        margin-left: 10px;
      }
  
      .resolver-message .message-content {
        order: 2;
      }
  
      .resolver-message .message-text {
        background-color: #ddd;
        color: #000;
      }
    
    .message-input {
      flex-grow: 1;
      padding: 12px;
      border: none;
      border-radius: 5px;
      font-size: 14px;
    }

    .send-button {
      background-color: #000;
      color: #fff;
      border: none;
      border-radius: 5px;
      padding: 12px 20px;
      margin-left: 10px;
      cursor: pointer;
      transition: background-color 0.2s;
    }

    .send-button:hover {
      background-color: #333;
    }

    /* Enhance the appearance of the chat log */
    .chat-log {
      border: 1px solid #ddd;
      padding: 10px;
      border-radius: 10px;
      background-color: #fff;
      color: #000;
      overflow-y: auto;
      max-height: 400px;
    }
  </style>
</head>
<body>

    
  <div class="chat-container">

    <div class="chat-log" id="chat-log">
      <!-- Chat messages will appear here -->
    </div>
    
        <div class="input-container">
        <input type="text" class="message-input" id="message-input" placeholder="Type your message...">
        <button class="send-button" id="send-button" >  Send</button>
        </div>
        <input type="file" id="imgInput" class="message-input"  placeholder="your file..." name="chatImg"  style="color:black" >
        <button  id="img-button"  class="send-button" > Attach image</button>

    <!-- <form method="post" action="/messages/image/<%=ticketId%>" enctype="multipart/form-data" >
        <input type="file" class="message-input"  placeholder="your file..." name="chatImg"  style="color:black" >
        <button class="send-button" type="submit"> Attach image</button>
    </form> -->

  </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>

    const chatLog = document.getElementById('chat-log');
    const messageInput = document.getElementById('message-input');
    const sendButton = document.getElementById('send-button');
    let isCurrentUserSender = true;
    let socket;
    const ticketId = prompt('Enter Ticket Id');


    fetch(`/messages/all/${ticketId}`, {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json'
        }
    }).then( function(data){
         socket = io();
         return data.json();
    }).then(function(data){
         data.forEach( function( msg ){
            showMessage(msg);
         })
    }).then(function(){

        let userRole = '';

        fetch('/getUserRole')
        .then(function(data){
            return data.json();
        })
        .then(function(data){
            userRole = data.role
            
            sendButton.addEventListener( 'click', function(){
            
                const messageText = messageInput.value.trim();
                socket.emit('chat message', { user: userRole ,message: messageText, ticketId: ticketId });
            
            });                     
        });

        socket.on('chat message', function(msg) {
                showMessage(msg);
        });
        
        
            
            const input = document.getElementById('imgInput'); // Adjust the selector as needed

            // Get the send button element
            const imgButton = document.getElementById('img-button'); // Adjust the selector as needed

            // Add an event listener to the send button
            imgButton.addEventListener('click', handleSendButton);

            // Event handler for send button
            function handleSendButton(event) {
            event.preventDefault(); // Prevent the default form submission behavior

            const selectedFile = input.files[0];

            if (selectedFile) {
                const formData = new FormData();
                formData.append('chatImg', selectedFile);
                formData.append('role', userRole );
                const url = `/messages/image/${ticketId}`; // Replace with the actual URL

                // Send the file using Fetch API
                fetch(url, {
                method: 'POST',
                body: formData,
                })
                .then(response => {
                    return response.json();
                })
                .then( function(data){
                    showMessage(data);
                })
                .catch(error => {
                    console.log(error)
                });
            }
            }


})


  function showMessage(msg)
  {
    const messageDiv = document.createElement('div');
        const messageClassName = msg.role === 'user' ? 'user-message' : 'resolver-message';

        if( msg.filename )
        {
            messageDiv.className = `chat-message ${messageClassName}`;
            messageDiv.innerHTML = `
            <div class="message-content">
                <img src="/${msg.filename}" style="width: 100px; height: 100px;"/>
            </div>
            <div class="avatar"></div>
            `;
            chatLog.appendChild(messageDiv);
            messageInput.value = '';
            chatLog.scrollTop = chatLog.scrollHeight;
        }
        else{
            messageDiv.className = `chat-message ${messageClassName}`;
        messageDiv.innerHTML = `
          <div class="message-content">
            <div class="message-text">${msg.message}</div>
          </div>
          <div class="avatar"></div>
        `;
        chatLog.appendChild(messageDiv);
        messageInput.value = '';
        chatLog.scrollTop = chatLog.scrollHeight;
        }
  }


    
  </script>
  
</body>
</html>
